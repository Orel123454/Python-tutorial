{
	"Tutorial-1.0":{
		"scope": "python",
		"prefix": "tutorial-1.0",
		"body": [
			"#To start the lesson, enter the command tutorial-$.$, where $ - lesson numbers",
			"",
			"#Table of contents:",
			"",
			"tutorial-1.1 #Command print",
			"tutorial-1.2 #Console input",
			"tutorial-1.3 #Data types",
			"tutorial-1.4 #Arithmetic operations",
			"tutorial-1.5 #Conditional operator 'if'",
		]
	},
	"Tutorial-1.1": {
		"scope": "python",
		"prefix": "tutorial-1.1",
		"body": [
			"#Write your first code",
            "#Enter any message between '' to display it in the console",
			"#If your terminal is not displayed below, then hover over the top panel >>Terminal... >>New Terminal",
			"#or use a combination Ctrl + `",
            "",
            "print('$1')",
            "",
			"#To start the program, click on start (green triangle) in the upper right",
			"#or use the top panel >>Terminal... >>Run Task",
			"",
			"#The 'print' command is used to print different types of data to the console",
			"#It is usually used to output the final result",
			"",
			"#Next > tutorial-1.2"
		],
		"description": "Log output to console"
	},
	"Tutorial-1.2": {
		"scope": "python",
		"prefix": "tutorial-1.2",
		"body": [
			"#If you think that the text format is limited only to the output of specific messages from the code, then you are mistaken",
			"#It is our power to enter characters directly into the terminal",
			"#Play a little with the input - just start the program and enter any text into the terminal",
			"",
			"HeroMessage = input()",
			"print ('It seems you entered', '<', HeroMessage ,'>')",
			"",
			"#Next > tutorial-1.3"
		]
	},
	"Tutorial-1.3": {
		"scope": "python",
		"prefix": "tutorial-1.3",
		"body": [
			"$1#Python can handle several types of data:",
			"",
			"# 1) Integer numbers. They are indicated by 'int'",
			"",
			"Int = int(1.0) #Convert a fraction to an integer",
			"print ('Integer number -', Int) # 1",
			"",
			"# 2) Floating point numbers. They are indicated by 'float'",
			"",
			"Float = float(1)",
			"print ('Float number -', Float) # 1.0",
			"",
			"# 3) Complex numbers. They are indicated by 'complex'",
			"",
			"Complex = complex (3, 2)",
			"print ('Complex real number -', Complex.real) # 3.0",
			"print ('Complex imaginary number -', Complex.imag) # 2.0",
			"",
			"# 4) Strings. They are indicated by 'str'",
			"",
			"String = str(1.0)",
			"print (String + ' - NOT NUMBER') # 1.0 / It may seem like a number is being printed, but in fact it is converted to a string",
			"",
			"# 5) Sets. They are recorded as '[a, b, c ... any symbols]' or '{a, b, c ... any symbols}'",
			"# If you use {}, then the array will be automatically sorted",
			"",
			"Set_not_sorted = [1, 5, 'Hello', 2]",
			"Set_sorted = {1, 5, 'Hello', 2}",
			"print ('Set not sorted -', Set_not_sorted) # [1, 5, 'Hello', 2]",
			"print ('Set sorted -', Set_sorted) # {1, 'Hello', 2, 5} / If the array output command with different data types is constantly executed, their position in the array will be sorted in random order",
			"",
			"# 6) Tuples. They are similar to arrays, but there is one difference - tuples are not mutable. Recorded as '()'",
			"",
			"Tuple = ('g', 16, 17, 'c')",
			"print ('Tuple -', Tuple) # ('g', 16, 17, 'c')",
			"",
			"# 7) Dictionaries These are unordered 'key-value' pairs. They are written like this '{'key': value, 'key': value}'",
			"# or 'dict(key='value', key='value')' or 'dict.fromkeys(['a','b'], 100)'",
			"",
			"Dict_one = {'key_one': 1, 'key_two': 2}",
			"Dict_two = dict(key_one='value_one', key_two='value_two')",
			"Dict_three = dict.fromkeys(['a','b'], 59)",
			"print ('Dict one -', Dict_one) # {'key_one': 1, 'key_two': 2}",
			"print ('Dict two -', Dict_two) # {'key_one': 'value_one', 'key_two': 'value_two'}",
			"print ('Dict three -', Dict_three) # {'a': 59, 'b': 59}",
			"",
			"#Next > tutorial-1.4"
		]
	},
	"Tutorial-1.4": {
		"scope": "python",
		"prefix": "tutorial-1.4",
		"body": [
			"#In this lesson we will talk about arithmetic operations",
			"#As in any other programming language, python has arithmetic operators",
			"",
			"# 1) Addition and Subtraction '+' and '-'",
			"Add = 5 + 9",
			"Sub = 18 - 11",
			"print ('Addition -', Add) # 14",
			"print ('Subtraction -', Sub) # 7",
			"",
			"# 2) Multiplication '*'",
			"Mult = 5 * 9",
			"print ('Multiplication -', Mult) # 45",
			"",
			"# 3) Division '/'. When dividing, an integer is automatically converted to floating",
			"Div_one = 30 / 5",
			"Div_two = 5 / 4",
			"print ('Division one -', Div_one) # 6.0",
			"print ('Division two -', Div_two) # 1.25",
			"",
			"# 4) Getting the integer part from division '//'",
			"Int_part = 9 // 2",
			"print ('Integer part -', Int_part) # 4",
			"",
			"# 5) Getting the remainder of the division '%'",
			"Rem = 26 % 7",
			"print ('Remainder -', Rem) # 5",
			"",
			"# 6) Exponentiation '**'",
			"Exp = 3 ** 4",
			"print('Exponentiation -', Exp) # 81",
			"",
			"#Next > tutorial-1.5",
		]
	},
	"Tutorial-1.5": {
		"scope": "python",
		"prefix": "tutorial-1.5",
		"body": [
			"#In some tasks, you need to determine the desired answer or choose from several",
			"#In such cases, the operator comes to the rescue 'if'",
			"#His task includes sorting according to a given condition",
			"",
			"#The 'if' construct usually uses logical operators -",
			"# '==' - Equal to something",
			"# '!=' - Not equal to anything",
			"# '>' '<' - More / Less",
			"# '>=' '<=' - Greater than or equal / less than or equal",
			"",
			"#Suppose we have a number whose parity we donâ€™t know and we need to determine which group it belongs to",
			"#In this case, we use the construction 'if - else'",
			"",
			"a = 3",
			"if (a // 2 == 0):",
			"    print('This number is even')",
			"else:",
			"    print('This number is odd')",
			"",
			"#If you have a task to choose from more than two options, then you can use the design 'if - elif - else'",
			"",
			"b = 'night'",
			"if (b == 'morning'):",
			"    print('It is morning now')",
			"elif (b == 'day'):",
			"    print('It is day')",
			"elif (b == 'evening'):",
			"    print('It is evening now')",
			"elif (b == 'night'):",
			"    print('It is night now')",
			"else:",
			"    print('I do not know what time of day it is')",
			"",
			"#Next > tutorial-1.6",
		]
    }
}